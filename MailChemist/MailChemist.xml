<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MailChemist</name>
    </assembly>
    <members>
        <member name="T:MailChemist.MailChemistx">
            <summary>
            
            </summary>
        </member>
        <member name="M:MailChemist.MailChemistx.#ctor(MailChemist.MailChemistEngine)">
            <summary>
            If you don't require functionality of <see cref="T:MailChemist.Core.Interfaces.IContentProvider" />. Otherwise, use one of the other constructors.
            </summary>
        </member>
        <member name="M:MailChemist.MailChemistx.#ctor(MailChemist.Core.Interfaces.IContentProvider,MailChemist.MailChemistEngine)">
            <summary> 
            Implement a custom <see cref="T:MailChemist.Core.Interfaces.IContentProvider" />
            </summary>
            <param name="mjmlContentProvider"></param>
            <param name="mailChemistEngine"></param>
            <exception cref="T:System.ArgumentNullException"><paramref name="mjmlContentProvider"/> is null</exception>
        </member>
        <member name="M:MailChemist.MailChemistx.RegisterGlobalTypesByAttribute">
            <summary>
            Uses reflection to automatically register any <see cref="T:MailChemist.Core.Attributes.MailChemistModelAttribute" /> types.
            </summary>
            <returns></returns>
            <exception cref="T:System.AppDomainUnloadedException"></exception>
        </member>
        <member name="M:MailChemist.MailChemistx.RegisterGlobalType(System.Type)">
            <summary>
            Allows you to register a type to be used in the fluid template.
            </summary>
            <param name="type"></param>
        </member>
        <member name="M:MailChemist.MailChemistx.RegisterGlobalFilter(System.String,Fluid.FilterDelegate)">
            <summary>
            Allows you to use MailChemist defined filters. 
            </summary>
        </member>
        <member name="M:MailChemist.MailChemistx.Render``1(System.String,``0,MailChemist.RenderOptions,System.Boolean)">
            <summary>
            Executes the provided content provider then renders the fluid and then renders the MJML using the provided engine.
            <see cref="P:System.Globalization.CultureInfo.CurrentCulture" /> as the CultureInfo.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="content"></param>
            <param name="model"></param>
            <param name="options"></param>
            <param name="registerType">If you have not registered the type, set this flag to true</param>
            <returns>
            
            </returns>
            <exception cref="T:MailChemist.Exceptions.MailChemistGetContentException">The IContentProvider threw an error. Read the InnerException.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The provided MailChemistEngine doesn't exist</exception>
        </member>
        <member name="M:MailChemist.MailChemistx.RenderFluid``1(System.String,``0,System.String,System.Globalization.CultureInfo,System.Boolean)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="fluid"></param>
            <param name="model"></param>
            <param name="result"></param>
            <param name="error"></param>
            <param name="modelName"></param>
            <param name="cultureInfo"></param>
            <param name="registerType"></param>
            <returns>
            
            </returns>
        </member>
        <member name="T:MailChemist.MailChemistEngine">
            <summary>
            
            </summary>
        </member>
        <member name="F:MailChemist.MailChemistEngine.Html">
            <summary>
            None
            </summary>
        </member>
        <member name="F:MailChemist.MailChemistEngine.MjmlApi">
            <summary>
            This will use mjml.io/api
            </summary>
        </member>
        <member name="F:MailChemist.MailChemistEngine.MjmlDotNet">
            <summary>
            
            </summary>
        </member>
    </members>
</doc>
