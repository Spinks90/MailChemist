<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MailChemist</name>
    </assembly>
    <members>
        <member name="M:MailChemist.Extensions.IListExtension.AddRange``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            This is internal so we don't expand the .NET methods for the developers
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source"></param>
            <param name="target"></param>
        </member>
        <member name="T:MailChemist.MailChemist">
            <summary>
            
            </summary>
        </member>
        <member name="M:MailChemist.MailChemist.#ctor">
            <summary>
            If you don't require functionality of <see cref="T:MailChemist.Core.Interfaces.IEmailContentProvider" />. Otherwise, use one of the other constructors.
            </summary>
        </member>
        <member name="M:MailChemist.MailChemist.#ctor(System.String,System.String,System.String)">
            <summary>
            Use MJML as the <see cref="T:MailChemist.Core.Interfaces.IEmailContentProvider" />
            </summary>
            <param name="mjmlApiApplicationId"></param>
            <param name="mjmlApiSecretKey"></param>
            <param name="mjmlApiUrl">Use this to mock or change to future version if the scheme hasn't changed</param>
            <exception cref="T:System.UriFormatException"></exception>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:MailChemist.MailChemist.#ctor(MailChemist.Core.Interfaces.IEmailContentProvider)">
            <summary> 
            Implement a custom <see cref="T:MailChemist.Core.Interfaces.IEmailContentProvider" />
            </summary>
            <param name="emailContentProvider"></param>
            <exception cref="T:System.ArgumentNullException"><paramref name="emailContentProvider"/> is null</exception>
        </member>
        <member name="M:MailChemist.MailChemist.RegisterGlobalTypes">
            <summary>
            Uses reflection to automatically register any <see cref="T:MailChemist.Core.Attributes.MailChemistModelAttribute" /> types.
            </summary>
            <returns></returns>
            <exception cref="T:System.AppDomainUnloadedException"></exception>
        </member>
        <member name="M:MailChemist.MailChemist.TryGenerate``1(System.String,``0,System.String@,System.String@,System.Boolean)">
            <summary>
            Executes the <see cref="M:MailChemist.Core.Interfaces.IEmailContentProvider.GenerateEmailContent(System.String)" /> then executes <see cref="M:MailChemist.MailChemist.TryGenerateFluid``1(System.String,``0,System.String@,System.String@,System.String,System.Globalization.CultureInfo,System.Boolean)" /> using
            <see cref="P:System.Globalization.CultureInfo.CurrentCulture" /> as the CultureInfo.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="content"></param>
            <param name="model"></param>
            <param name="registerType">If you have not registered the type, set this flag to true</param>
            <param name="result"></param>
            <param name="error">Error with getting the content or generating the fluid</param>
            <returns></returns>
        </member>
        <member name="M:MailChemist.MailChemist.TryGenerateFluid``1(System.String,``0,System.String@,System.String@,System.String,System.Globalization.CultureInfo,System.Boolean)">
            <summary>
            </summary>
            <typeparam name="T"></typeparam>
            <param name="fluid"></param>
            <param name="model"></param>
            <param name="result"></param>
            <param name="error"></param>
            <param name="modelName"></param>
            <param name="cultureInfo"></param>
            <param name="registerType"></param>
            <returns></returns>
        </member>
        <member name="M:MailChemist.MailChemist.TryGenerateContent(System.String,System.String@)">
            <summary>
            
            </summary>
            <param name="content"></param>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="T:MailChemist.Providers.MjmlEmailContentProvider">
            <summary>
            
            </summary>
        </member>
        <member name="M:MailChemist.Providers.MjmlEmailContentProvider.#ctor(System.Uri,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="baseUri"></param>
            <param name="mjmlApiApplicationId"></param>
            <param name="mjmlApiSecretKey"></param>
        </member>
        <member name="M:MailChemist.Providers.MjmlEmailContentProvider.GenerateEmailContent(System.String)">
            <summary>
            
            </summary>
            <param name="content"></param>
            <returns></returns>
        </member>
    </members>
</doc>
